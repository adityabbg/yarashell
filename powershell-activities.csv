"@timestamp","timestamp_UTC_readable","ComputerName","UserName","ParentProcessId","TargetProcessId","RawProcessId","Score","Exec","Dwnld","Encode","ExecPol","NonI","NoProf","Hidden","Domain","VM","Prxy","obf1","obf2","CommandLine","cid","aid"
"1755159998315","2025-08-14T08:26:38+0000","WIN-OPGE5A7H6LO","SYSTEM","3649738651301","3649740228591","8","6","0","0","5","0","0","1","0","0","0","0","0","0","""C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"" -Version 5.1 -s -NoLogo -NoProfile -EncodedCommand UwBlAHQALQBMAG8AYwBhAHQAaQBvAG4AIAAnAEMAOgBcACcA","227c127e2aa847adaf5f203d8c4ac147","0c19431aba3d4e5cac080c3f7e91b2c2"
"1755119930405","2025-08-13T21:18:50+0000","WIN-OPGE5A7H6LO","SYSTEM","3642501106592","3642513104592","15488","0","0","0","0","0","0","0","0","0","0","0","0","0","powershell.exe -ExecutionPolicy Restricted -Command $res = 0; if(get-vmswitch | Where {$_.NetAdapterInterfaceDescription -ne $null -and $_.NetAdapterInterfaceDescription -eq (Get-NetLbfoTeamNic).InterfaceDescription}){$res=1}; Write-Host ""Final result:"", $res","227c127e2aa847adaf5f203d8c4ac147","0c19431aba3d4e5cac080c3f7e91b2c2"
"1755119929709","2025-08-13T21:18:49+0000","WIN-OPGE5A7H6LO","SYSTEM","3642501106592","3642511771415","228","0","0","0","0","0","0","0","0","0","0","0","0","0","powershell.exe -ExecutionPolicy Restricted -Command Write-Host 'Final result: 1';","227c127e2aa847adaf5f203d8c4ac147","0c19431aba3d4e5cac080c3f7e91b2c2"
"1755119925811","2025-08-13T21:18:45+0000","WIN-OPGE5A7H6LO","SYSTEM","3642501106592","3642505675826","14076","8","0","0","0","0","0","0","0","0","0","0","4","4","powershell.exe -ExecutionPolicy Restricted -Command \u000a                    $isBroken = 0\u000a\u000a                    # Define the root registry path\u000a                    $ShellRegRoot = 'HKCU:\Software\Classes\Local Settings\Software\Microsoft\Windows\Shell'\u000a                    $bagMRURoot =  $ShellRegRoot + '\BagMRU'\u000a                    $bagRoot = $ShellRegRoot + '\Bags'\u000a\u000a                    # Define the target GUID tail for MSGraphHome\u000a                    $HomeFolderGuid = '14001F400E3174F8B7B6DC47BC84B9E6B38F59030000'\u000a\u000a                    $properties = Get-ItemProperty -Path $bagMRURoot\u000a\u000a                    foreach ($property in $properties.PSObject.Properties) {\u000a                        if ($property.TypeNameOfValue -eq 'System.Byte[]') {\u000a                            $hexString = ($property.Value | ForEach-Object { $_.ToString('X2') }) -join ''\u000a                            if ($hexString -eq $HomeFolderGuid) {\u000a                                $subkey = $property.Name\u000a                                $nodeSlot = Get-ItemPropertyValue -Path ($bagMRURoot + '\' + $subkey) -Name 'NodeSlot'\u000a                                $isBroken = if ((Get-ItemPropertyValue -Path ($bagRoot + '\' + $nodeSlot + '\Shell\*') -Name 'GroupView') -eq 0) { 1 } else { 0 }\u000a                                break\u000a                            }\u000a                        }\u000a                    }\u000a\u000a                    Write-Host 'Final result:',$isBroken\u000a                ","227c127e2aa847adaf5f203d8c4ac147","0c19431aba3d4e5cac080c3f7e91b2c2"
